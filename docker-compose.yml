version: "3"
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./Dockerfile.api
    image: php_service
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./api:/var/www
      - ./_docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  #React Service
  # web:
  #   image: node
  #   container_name: web
  #   volumes:
  #     - "/app/node_modules"
  #     - "./routes:/app"
  #   ports:
  #     - 3001:3000
  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "91:80"
      - "443:443"
    volumes:
      - ./api:/var/www
      - ./_docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  #MySQL Service
  db:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: borto_service
      MYSQL_USER: borto
      MYSQL_PASSWORD: borto
      MYSQL_ROOT_PASSWORD: borto
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./_docker/mysql/data:/var/lib/mysql
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
